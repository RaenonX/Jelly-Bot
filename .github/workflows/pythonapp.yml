name: Jelly Bot - CI Test

on: [push]

defaults:
  run:
    shell: cmd

env:
  SECRET_KEY: ${{ secrets.DjangoSecretKey }}

  DJANGO_SETTINGS_MODULE: JellyBot.settings

  PRODUCTION: 0
  DEBUG: 1
  TEST: 1

  LOGGER: DISCORD_INTERNAL|40,MODEL_CHECK|30,PING_SPAM|10
  NO_FIELD_CHECK: 1

  MONGO_URL: ${{ secrets.MongoDBURL }}
  MONGO_DB: 'GitHubActionTest#${{ github.run_number }}'

  LINE_SECRET: ${{ secrets.LINESecret }}
  LINE_TOKEN: ${{ secrets.LINEToken }}
  DISCORD_TOKEN: ${{ secrets.DiscordToken }}

  GI_CLIENT_ID: ${{ secrets.GoogleIdentityClientID }}
  IMGUR_CLIENT_ID: ${{ secrets.ImgurClientID }}

  EMAIL_ACCOUNT: ${{ secrets.EmailAccount }}
  EMAIL_PASSWORD: ${{ secrets.EmailPassword }}

  SERVICE_SHORT_URL: http://rnnx.cc

  DDNS_HOST: bot
  DDNS_DOMAIN: raenonx.cc
  DDNS_PASSWORD: ${{ secrets.DDNSPassword }}

  LINTED: bot doc extdiscord extline extutils

jobs:
  prepare:
    runs-on: windows-latest

    continue-on-error: true

    steps:
      - name: Print SHA
        run: |
          echo %GITHUB_SHA%

      - name: Print REF
        run: |
          echo %GITHUB_REF%

  checks:
    runs-on: windows-latest

    needs: [prepare]

    timeout-minutes: 20

    continue-on-error: true

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-env.txt

      - name: '`flake8` - error check'
        run: |
          flake8 . --config .flake8-error --benchmark

      - name: '`flake8` - style check'
        run: |
          flake8 . --config .flake8-style --benchmark

      - name: Print out linted modules
        run: |
          echo %LINTED%

      - name: '`pydocstyle`'
        run: |
          pydocstyle %LINTED% --count

      - name: '`pylint`'
        run: |
          pylint %LINTED%

  django-tests:
    runs-on: windows-latest

    needs: [prepare, checks]

    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-env.txt

      - name: Unit tests
        run: |
          py manage.py test tests.unit

      - name: Integration tests
        run: |
          py manage.py test tests.integration

      - name: System tests
        run: |
          py manage.py test tests.system

  cleanup:
    runs-on: windows-latest

    needs: [django-tests]

    steps:
      - uses: actions/checkout@v2

      - name: Install pymongo
        run: |
          pip install pymongo dnspython

      - name: Drop MongoDB database
        run: |
          python mongodb/cli/drop_db.py %MONGO_DB%
